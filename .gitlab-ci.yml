# sonarcloud pipelines
job:
  script: echo "Hello, Rules!"
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
      allow_failure: true

stages:
    - build
    - test
    - quality

cache:
    paths:
        - ./node_modules
        - ./.next/cache

variables:
    SONAR_USER_HOME: '${CI_PROJECT_DIR}/.sonar' # Defines the location of the analysis task cache
    GIT_DEPTH: '0' # Tells git to fetch all the branches of the project, required by the analysis task
    GIT_SUBMODULE_STRATEGY: recursive

build:
    stage: build
    script:
        - echo "Building"
        - mkdir build
        - touch build/info.txt
    artifacts:
        paths:
            - build/
test:
    stage: test
    script:
        - echo "Testing"
        - test -f "build/info.txt"

sonarcloud-check:
    stage: quality
    image:
        name: sonarsource/sonar-scanner-cli:latest
        entrypoint: ['']
    cache:
        key: '${CI_JOB_NAME}'
        paths:
            - .sonar/cache
    script:
        - npx eslint -f json -o ./eslint-report.json . || echo "Lint completed"
        - sonar-scanner -X -Dsonar.projectVersion=$(npx -q project-version) -Dsonar.qualitygate.wait=true
    only:
        - merge_requests
        - main
        - branch-*
